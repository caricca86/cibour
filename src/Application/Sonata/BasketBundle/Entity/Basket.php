<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\BasketBundle\Entity;

use Sonata\BasketBundle\Entity\BaseBasket as BaseBasket;
use Sonata\Component\Delivery\ServiceDeliveryInterface;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Basket extends BaseBasket
{

    /**
     * @var integer $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    public function getDeliveryPrice($vat = false)
    {
        $method = $this->getDeliveryMethod();

        $price = 0;

        if (!$method instanceof ServiceDeliveryInterface || !$method->isAddressRequired()) {
            return $price;
        }

        foreach ($this->getBasketElements() as $basketElement) {
            if ($basketElement->getProduct()->isRecurrentPayment() === false)
            {
                $price = bcadd($price, $basketElement->getTotal($vat));
            }
        }

        return ($price*10)/100;
    }
}